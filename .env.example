# Environment variables for Enxi ERP
# Copy this file to .env and update with your values

# Database
# For SQLite (development)
DATABASE_URL="file:./prisma/dev.db"

# For PostgreSQL (production)
# DATABASE_URL="postgresql://username:password@localhost:5432/database_name"

# JWT Secret - Generate with: openssl rand -base64 32
JWT_SECRET="your-jwt-secret-here-change-in-production"

# NextAuth Configuration
NEXTAUTH_URL="http://localhost:3000"
NEXTAUTH_SECRET="your-nextauth-secret-here-change-in-production"

# Node Environment (development, production, test)
NODE_ENV="development"

# Application Port (optional, defaults to 3000)
PORT=3000

# Database Persistence Configuration
# ===================================
# For production deployments, the SQLite database should be stored in a persistent location
# to survive application rebuilds and updates.
#
# Option 1: System-wide persistence (requires root)
# - Database stored at: /var/lib/enxi/database/enxi.db
# - Run: sudo ./scripts/setup-persistent-db.sh
#
# Option 2: User-local persistence
# - Database stored at: ~/.enxi/database/enxi.db
# - Run: ./scripts/setup-persistent-db.sh
#
# Option 3: Docker persistence
# - Use docker-compose.persistent.yml for volume-based persistence
# - Run: docker-compose -f docker-compose.persistent.yml up -d
#
# The setup script will:
# - Create persistent directory structure
# - Move/link existing database to persistent location
# - Set up automatic backups (systemd or cron)
# - Update DATABASE_URL to use production path
#
# For production, update DATABASE_URL to:
# DATABASE_URL="file:./prisma/prod.db"
# Database persistence configuration
# For production, the database is stored at /var/lib/enxi/database/enxi.db (system-wide)
# or ~/.enxi/database/enxi.db (user-local) and symlinked to ./prisma/prod.db
# This ensures the database persists across application updates and rebuilds
