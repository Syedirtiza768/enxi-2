name: Type Error Tracking

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # Run daily at 9 AM UTC
    - cron: '0 9 * * *'

jobs:
  track-type-errors:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Count TypeScript errors
        id: count-errors
        run: |
          ERROR_COUNT=$(npx tsc --noEmit 2>&1 | grep -c "error TS" || echo "0")
          echo "error_count=$ERROR_COUNT" >> $GITHUB_OUTPUT
          echo "## TypeScript Error Count: $ERROR_COUNT" >> $GITHUB_STEP_SUMMARY
          
      - name: Analyze error categories
        run: |
          echo "### Error Breakdown" >> $GITHUB_STEP_SUMMARY
          echo "| Category | Count |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|-------|" >> $GITHUB_STEP_SUMMARY
          
          # Count errors by type
          npx tsc --noEmit 2>&1 | grep "error TS" | sed 's/.*error \(TS[0-9]*\):.*/\1/' | sort | uniq -c | sort -rn | head -10 | while read count code; do
            echo "| $code | $count |" >> $GITHUB_STEP_SUMMARY
          done
          
      - name: Check error trend
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const errorCount = ${{ steps.count-errors.outputs.error_count }};
            
            // Read previous count from artifact
            let previousCount = errorCount;
            let trend = '→';
            
            try {
              const data = fs.readFileSync('type-error-history.json', 'utf8');
              const history = JSON.parse(data);
              previousCount = history[history.length - 1]?.count || errorCount;
              
              if (errorCount < previousCount) trend = '↓';
              else if (errorCount > previousCount) trend = '↑';
              
              // Add new entry
              history.push({
                date: new Date().toISOString(),
                count: errorCount,
                commit: context.sha.substring(0, 7)
              });
              
              // Keep last 30 entries
              if (history.length > 30) history.shift();
              
              fs.writeFileSync('type-error-history.json', JSON.stringify(history, null, 2));
            } catch (e) {
              // First run - create history
              fs.writeFileSync('type-error-history.json', JSON.stringify([{
                date: new Date().toISOString(),
                count: errorCount,
                commit: context.sha.substring(0, 7)
              }], null, 2));
            }
            
            const change = errorCount - previousCount;
            const changeStr = change > 0 ? `+${change}` : `${change}`;
            
            core.summary.addRaw(`\n### Trend: ${trend} ${changeStr} errors\n`);
            core.summary.write();
            
            // Fail if errors increased significantly
            if (change > 50) {
              core.setFailed(`Type errors increased by ${change}! Please fix before merging.`);
            }
      
      - name: Upload error history
        uses: actions/upload-artifact@v4
        with:
          name: type-error-history
          path: type-error-history.json
          retention-days: 90
      
      - name: Generate detailed report
        if: github.event_name == 'pull_request'
        run: |
          # Create detailed report for PRs
          npx tsc --noEmit 2>&1 > type-errors-full.log || true
          
          # Extract files with most errors
          echo "### Files with most errors:" >> $GITHUB_STEP_SUMMARY
          grep "error TS" type-errors-full.log | cut -d'(' -f1 | sort | uniq -c | sort -rn | head -20 | while read count file; do
            echo "- $file: $count errors" >> $GITHUB_STEP_SUMMARY
          done
          
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const errorCount = ${{ steps.count-errors.outputs.error_count }};
            const body = `## TypeScript Error Report
            
            **Current Errors:** ${errorCount}
            
            <details>
            <summary>View details</summary>
            
            Check the [workflow summary](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for full details.
            
            </details>
            
            ---
            *Generated by Type Error Tracking workflow*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });

  test-type-fixes:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: Run type fix tests
        run: |
          npm test -- tests/type-fixes --passWithNoTests
          
      - name: Validate safe fixes
        run: |
          # Check that fixes don't break existing tests
          npm test -- --changedSince=main --passWithNoTests