generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                String           @id @default(cuid())
  username          String           @unique
  email             String           @unique
  password          String
  role              String           @default("USER")
  isActive          Boolean          @default(true)
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  managerId         String?
  auditLogs         AuditLog[]
  assignedCustomers Customer[]       @relation("CustomerAssignment")
  leads             Lead[]
  salesTeamMember   SalesTeamMember?
  manager           User?            @relation("SalesTeamHierarchy", fields: [managerId], references: [id])
  managedUsers      User[]           @relation("SalesTeamHierarchy")
  userPermissions   UserPermission[]
  profile           UserProfile?
  sessions          UserSession[]

  @@index([username])
  @@index([email])
  @@index([managerId])
}

model AuditLog {
  id         String   @id @default(cuid())
  userId     String
  action     String
  entityType String
  entityId   String
  metadata   Json?
  beforeData Json?
  afterData  Json?
  ipAddress  String?
  userAgent  String?
  timestamp  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([entityType, entityId])
  @@index([action])
  @@index([timestamp])
}

model Lead {
  id        String    @id @default(cuid())
  firstName String
  lastName  String
  email     String
  phone     String?
  company   String?
  jobTitle  String?
  source    String    @default("WEBSITE")
  status    String    @default("NEW")
  notes     String?
  createdBy String
  updatedBy String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  customer  Customer?
  creator   User      @relation(fields: [createdBy], references: [id])

  @@index([email])
  @@index([status])
  @@index([source])
  @@index([createdBy])
  @@index([createdAt])
}

model Customer {
  id              String       @id @default(cuid())
  customerNumber  String       @unique
  name            String
  email           String       @unique
  phone           String?
  industry        String?
  website         String?
  address         String?
  taxId           String?
  currency        String       @default("USD")
  creditLimit     Float        @default(0)
  paymentTerms    Int          @default(30)
  leadId          String?      @unique
  assignedToId    String?
  assignedAt      DateTime?
  assignedBy      String?
  assignmentNotes String?
  createdBy       String
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  accountId       String?      @unique
  lead            Lead?        @relation(fields: [leadId], references: [id])
  assignedTo      User?        @relation("CustomerAssignment", fields: [assignedToId], references: [id])
  account         Account?     @relation(fields: [accountId], references: [id])
  customerPOs     CustomerPO[]
  invoices        Invoice[]
  payments        Payment[]
  salesCases      SalesCase[]

  @@index([email])
  @@index([createdAt])
  @@index([assignedToId])
  @@index([name])
  @@index([customerNumber])
  @@index([currency])
  @@index([industry])
  @@index([updatedAt])
  @@index([accountId])
  @@index([currency, createdAt])
  @@index([industry, createdAt])
}

model SalesCase {
  id             String        @id @default(cuid())
  caseNumber     String        @unique
  customerId     String
  title          String
  description    String?
  status         String        @default("OPEN")
  estimatedValue Float         @default(0)
  actualValue    Float         @default(0)
  cost           Float         @default(0)
  profitMargin   Float         @default(0)
  createdBy      String
  assignedTo     String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  closedAt       DateTime?
  expenses       CaseExpense[]
  customerPOs    CustomerPO[]
  quotations     Quotation[]
  customer       Customer      @relation(fields: [customerId], references: [id])
  salesOrders    SalesOrder[]

  @@index([customerId])
  @@index([status])
  @@index([createdAt])
}

model Account {
  id                String        @id @default(cuid())
  code              String        @unique
  name              String
  type              String
  currency          String        @default("USD")
  description       String?
  parentId          String?
  balance           Float         @default(0)
  status            String        @default("ACTIVE")
  isSystemAccount   Boolean       @default(false)
  createdBy         String
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  parent            Account?      @relation("AccountHierarchy", fields: [parentId], references: [id])
  children          Account[]     @relation("AccountHierarchy")
  caseExpenses      CaseExpense[]
  customer          Customer?
  itemsInventory    Item[]        @relation("ItemInventoryAccount")
  itemsCogs         Item[]        @relation("ItemCogsAccount")
  itemsSales        Item[]        @relation("ItemSalesAccount")
  journalLines      JournalLine[]
  locations         Location[]    @relation("LocationInventoryAccount")
  supplier          Supplier?     @relation("SupplierAccount")
  taxRatesCollected TaxRate[]     @relation("TaxCollectedAccount")
  taxRatesPaid      TaxRate[]     @relation("TaxPaidAccount")
  
  // Default account settings
  defaultInventoryFor CompanySettings[] @relation("DefaultInventoryAccount")
  defaultCogsFor      CompanySettings[] @relation("DefaultCogsAccount")
  defaultSalesFor     CompanySettings[] @relation("DefaultSalesAccount")

  @@index([code])
  @@index([type])
  @@index([parentId])
  @@index([balance])
  @@index([type, balance])
}

model JournalEntry {
  id               String            @id @default(cuid())
  entryNumber      String            @unique
  date             DateTime
  description      String
  reference        String?
  currency         String            @default("USD")
  exchangeRate     Float             @default(1.0)
  status           String            @default("DRAFT")
  createdBy        String
  postedBy         String?
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  postedAt         DateTime?
  caseExpenses     CaseExpense[]
  lines            JournalLine[]
  stockMovements   StockMovement[]
  supplierInvoices SupplierInvoice[]
  supplierPayments SupplierPayment[]

  @@index([date])
  @@index([status])
  @@index([reference])
}

model JournalLine {
  id               String       @id @default(cuid())
  journalEntryId   String
  accountId        String
  description      String?
  debitAmount      Float        @default(0)
  creditAmount     Float        @default(0)
  currency         String       @default("USD")
  exchangeRate     Float        @default(1.0)
  baseDebitAmount  Float        @default(0)
  baseCreditAmount Float        @default(0)
  journalEntry     JournalEntry @relation(fields: [journalEntryId], references: [id], onDelete: Cascade)
  account          Account      @relation(fields: [accountId], references: [id])

  @@index([journalEntryId])
  @@index([accountId])
}

model Quotation {
  id              String          @id @default(cuid())
  quotationNumber String          @unique
  salesCaseId     String
  version         Int             @default(1)
  status          String          @default("DRAFT")
  validUntil      DateTime
  subtotal        Float           @default(0)
  taxAmount       Float           @default(0)
  discountAmount  Float           @default(0)
  totalAmount     Float           @default(0)
  paymentTerms    String?
  deliveryTerms   String?
  notes           String?
  createdBy       String
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  internalNotes   String?
  customerPOs     CustomerPO[]
  salesCase       SalesCase       @relation(fields: [salesCaseId], references: [id])
  items           QuotationItem[]
  salesOrders     SalesOrder[]

  @@index([salesCaseId])
  @@index([status])
  @@index([createdAt])
}

model QuotationTemplate {
  id                  String                  @id @default(cuid())
  name                String
  description         String?
  isActive            Boolean                 @default(true)
  paymentTerms        String?
  deliveryTerms       String?
  notes               String?
  footerNotes         String?
  defaultValidityDays Int                     @default(30)
  createdBy           String
  createdAt           DateTime                @default(now())
  updatedAt           DateTime                @updatedAt
  items               QuotationTemplateItem[]

  @@index([isActive])
  @@index([name])
}

model QuotationTemplateItem {
  id                  String            @id @default(cuid())
  templateId          String
  lineNumber          Int               @default(1)
  lineDescription     String?
  isLineHeader        Boolean           @default(false)
  itemType            String            @default("PRODUCT")
  itemId              String?
  itemCode            String
  description         String
  internalDescription String?
  defaultQuantity     Float             @default(1)
  defaultUnitPrice    Float             @default(0)
  unitOfMeasureId     String?
  defaultDiscount     Float             @default(0)
  defaultTaxRate      Float             @default(0)
  taxRateId           String?
  sortOrder           Int               @default(0)
  template            QuotationTemplate @relation(fields: [templateId], references: [id], onDelete: Cascade)
  item                Item?             @relation("TemplateItemProduct", fields: [itemId], references: [id])
  unitOfMeasure       UnitOfMeasure?    @relation("TemplateItemUoM", fields: [unitOfMeasureId], references: [id])
  taxRateConfig       TaxRate?          @relation("TemplateItemTaxRate", fields: [taxRateId], references: [id])

  @@index([templateId])
  @@index([itemId])
}

model QuotationItem {
  id                  String         @id @default(cuid())
  quotationId         String
  lineNumber          Int            @default(1)
  lineDescription     String?
  isLineHeader        Boolean        @default(false)
  itemType            String         @default("PRODUCT")
  itemId              String?
  itemCode            String
  description         String
  internalDescription String?
  quantity            Float          @default(1)
  unitPrice           Float          @default(0)
  cost                Float?         @default(0)
  discount            Float          @default(0)
  taxRate             Float          @default(0)
  taxRateId           String?
  unitOfMeasureId     String?
  subtotal            Float          @default(0)
  discountAmount      Float          @default(0)
  taxAmount           Float          @default(0)
  totalAmount         Float          @default(0)
  availabilityStatus  String?
  availableQuantity   Float?
  sortOrder           Int            @default(0)
  quotation           Quotation      @relation(fields: [quotationId], references: [id], onDelete: Cascade)
  item                Item?          @relation("QuotationItemProduct", fields: [itemId], references: [id])
  taxRateConfig       TaxRate?       @relation("QuotationItemTaxRate", fields: [taxRateId], references: [id])
  unitOfMeasure       UnitOfMeasure? @relation("QuotationItemUoM", fields: [unitOfMeasureId], references: [id])

  @@index([quotationId])
  @@index([itemId])
}

model SalesOrder {
  id                    String             @id @default(cuid())
  orderNumber           String             @unique
  quotationId           String?
  salesCaseId           String
  status                String             @default("PENDING")
  version               Int                @default(1)
  orderDate             DateTime           @default(now())
  requestedDate         DateTime?
  promisedDate          DateTime?
  subtotal              Float              @default(0)
  taxAmount             Float              @default(0)
  discountAmount        Float              @default(0)
  shippingAmount        Float              @default(0)
  totalAmount           Float              @default(0)
  paymentTerms          String?
  shippingTerms         String?
  shippingAddress       String?
  billingAddress        String?
  customerPO            String?
  notes                 String?
  internalNotes         String?
  fulfilledAmount       Float              @default(0)
  shippedAmount         Float              @default(0)
  invoicedAmount        Float              @default(0)
  createdBy             String
  approvedBy            String?
  approvedAt            DateTime?
  sentBy                String?
  sentAt                DateTime?
  cancelledBy           String?
  cancelledAt           DateTime?
  cancellationReason    String?
  createdAt             DateTime           @default(now())
  updatedAt             DateTime           @updatedAt
  customerPurchaseOrder CustomerPO?
  invoices              Invoice[]
  quotation             Quotation?         @relation(fields: [quotationId], references: [id])
  salesCase             SalesCase          @relation(fields: [salesCaseId], references: [id])
  items                 SalesOrderItem[]
  shipments             Shipment[]
  stockReservations     StockReservation[] @relation("OrderStockReservations")

  @@index([salesCaseId])
  @@index([status])
  @@index([orderDate])
  @@index([quotationId])
}

model SalesOrderItem {
  id                  String             @id @default(cuid())
  salesOrderId        String
  lineNumber          Int                @default(1)
  lineDescription     String?
  isLineHeader        Boolean            @default(false)
  itemType            String             @default("PRODUCT")
  itemId              String?
  itemCode            String
  description         String
  internalDescription String?
  quantity            Float              @default(1)
  unitPrice           Float              @default(0)
  cost                Float?             @default(0)
  discount            Float              @default(0)
  taxRate             Float              @default(0)
  taxRateId           String?
  unitOfMeasureId     String?
  subtotal            Float              @default(0)
  discountAmount      Float              @default(0)
  taxAmount           Float              @default(0)
  totalAmount         Float              @default(0)
  quantityReserved    Float              @default(0)
  quantityShipped     Float              @default(0)
  quantityInvoiced    Float              @default(0)
  sortOrder           Int                @default(0)
  salesOrder          SalesOrder         @relation(fields: [salesOrderId], references: [id], onDelete: Cascade)
  item                Item?              @relation("SalesOrderItemProduct", fields: [itemId], references: [id])
  taxRateConfig       TaxRate?           @relation("SalesOrderItemTaxRate", fields: [taxRateId], references: [id])
  unitOfMeasure       UnitOfMeasure?     @relation("SalesOrderItemUoM", fields: [unitOfMeasureId], references: [id])
  stockReservations   StockReservation[] @relation("OrderItemStockReservations")

  @@index([salesOrderId])
  @@index([itemId])
}

model SalesOrderTemplate {
  id              String                   @id @default(cuid())
  name            String
  description     String?
  isActive        Boolean                  @default(true)
  paymentTerms    String?
  shippingTerms   String?
  shippingAddress String?
  billingAddress  String?
  notes           String?
  defaultLeadDays Int                      @default(7)
  createdBy       String
  createdAt       DateTime                 @default(now())
  updatedAt       DateTime                 @updatedAt
  items           SalesOrderTemplateItem[]

  @@index([isActive])
  @@index([name])
}

model SalesOrderTemplateItem {
  id                  String             @id @default(cuid())
  templateId          String
  lineNumber          Int                @default(1)
  lineDescription     String?
  isLineHeader        Boolean            @default(false)
  itemType            String             @default("PRODUCT")
  itemId              String?
  itemCode            String
  description         String
  internalDescription String?
  defaultQuantity     Float              @default(1)
  defaultUnitPrice    Float              @default(0)
  unitOfMeasureId     String?
  defaultDiscount     Float              @default(0)
  defaultTaxRate      Float              @default(0)
  taxRateId           String?
  sortOrder           Int                @default(0)
  template            SalesOrderTemplate @relation(fields: [templateId], references: [id], onDelete: Cascade)
  item                Item?              @relation("SalesOrderTemplateItemProduct", fields: [itemId], references: [id])
  unitOfMeasure       UnitOfMeasure?     @relation("SalesOrderTemplateItemUoM", fields: [unitOfMeasureId], references: [id])
  taxRateConfig       TaxRate?           @relation("SalesOrderTemplateItemTaxRate", fields: [taxRateId], references: [id])

  @@index([templateId])
  @@index([itemId])
}

model Shipment {
  id              String         @id @default(cuid())
  shipmentNumber  String         @unique
  salesOrderId    String
  status          String         @default("PREPARING")
  shipmentDate    DateTime?
  trackingNumber  String?
  carrier         String?
  shippingMethod  String?
  shippingCost    Float          @default(0)
  shipToAddress   String
  shipFromAddress String?
  createdBy       String
  shippedBy       String?
  deliveredBy     String?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  shippedAt       DateTime?
  deliveredAt     DateTime?
  salesOrder      SalesOrder     @relation(fields: [salesOrderId], references: [id])
  items           ShipmentItem[]

  @@index([salesOrderId])
  @@index([status])
  @@index([shipmentDate])
}

model ShipmentItem {
  id               String   @id @default(cuid())
  shipmentId       String
  salesOrderItemId String
  itemId           String
  itemCode         String
  description      String
  quantityShipped  Float
  shipment         Shipment @relation(fields: [shipmentId], references: [id], onDelete: Cascade)
  item             Item     @relation("ShipmentItemProduct", fields: [itemId], references: [id])

  @@index([shipmentId])
  @@index([salesOrderItemId])
}

model Invoice {
  id             String        @id @default(cuid())
  invoiceNumber  String        @unique
  salesOrderId   String?
  customerId     String
  type           String        @default("SALES")
  status         String        @default("DRAFT")
  invoiceDate    DateTime      @default(now())
  dueDate        DateTime
  subtotal       Float         @default(0)
  taxAmount      Float         @default(0)
  discountAmount Float         @default(0)
  totalAmount    Float         @default(0)
  paidAmount     Float         @default(0)
  balanceAmount  Float         @default(0)
  paymentTerms   String?
  billingAddress String?
  notes          String?
  createdBy      String
  sentBy         String?
  sentAt         DateTime?
  paidAt         DateTime?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  salesOrder     SalesOrder?   @relation(fields: [salesOrderId], references: [id])
  customer       Customer      @relation(fields: [customerId], references: [id])
  items          InvoiceItem[]
  payments       Payment[]

  @@index([customerId])
  @@index([status])
  @@index([invoiceDate])
  @@index([dueDate])
}

model InvoiceItem {
  id             String   @id @default(cuid())
  invoiceId      String
  itemId         String?
  itemCode       String
  description    String
  quantity       Float    @default(1)
  unitPrice      Float    @default(0)
  discount       Float    @default(0)
  taxRate        Float    @default(0)
  taxRateId      String?
  subtotal       Float    @default(0)
  discountAmount Float    @default(0)
  taxAmount      Float    @default(0)
  totalAmount    Float    @default(0)
  invoice        Invoice  @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  item           Item?    @relation("InvoiceItemProduct", fields: [itemId], references: [id])
  taxRateConfig  TaxRate? @relation("InvoiceItemTaxRate", fields: [taxRateId], references: [id])

  @@index([invoiceId])
  @@index([itemId])
}

model Payment {
  id            String   @id @default(cuid())
  paymentNumber String   @unique
  invoiceId     String
  customerId    String
  amount        Float
  paymentDate   DateTime @default(now())
  paymentMethod String   @default("BANK_TRANSFER")
  reference     String?
  notes         String?
  createdBy     String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  invoice       Invoice  @relation(fields: [invoiceId], references: [id])
  customer      Customer @relation(fields: [customerId], references: [id])

  @@index([invoiceId])
  @@index([customerId])
  @@index([paymentDate])
}

model Category {
  id          String     @id @default(cuid())
  code        String     @unique
  name        String
  description String?
  parentId    String?
  isActive    Boolean    @default(true)
  createdBy   String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  parent      Category?  @relation("CategoryHierarchy", fields: [parentId], references: [id])
  children    Category[] @relation("CategoryHierarchy")
  items       Item[]

  @@index([code])
  @@index([parentId])
}

model UnitOfMeasure {
  id                      String                   @id @default(cuid())
  code                    String                   @unique
  name                    String
  description             String?
  symbol                  String?
  baseUnitId              String?
  conversionFactor        Float                    @default(1.0)
  isActive                Boolean                  @default(true)
  isBaseUnit              Boolean                  @default(false)
  createdBy               String
  createdAt               DateTime                 @default(now())
  updatedAt               DateTime                 @updatedAt
  items                   Item[]
  purchaseOrderItems      PurchaseOrderItem[]      @relation("POItemUoM")
  quotationItems          QuotationItem[]          @relation("QuotationItemUoM")
  quotationTemplateItems  QuotationTemplateItem[]  @relation("TemplateItemUoM")
  salesOrderItems         SalesOrderItem[]         @relation("SalesOrderItemUoM")
  salesOrderTemplateItems SalesOrderTemplateItem[] @relation("SalesOrderTemplateItemUoM")
  stockMovements          StockMovement[]
  baseUnit                UnitOfMeasure?           @relation("UoMConversion", fields: [baseUnitId], references: [id])
  derivedUnits            UnitOfMeasure[]          @relation("UoMConversion")

  @@index([code])
}

model Item {
  id                      String                   @id @default(cuid())
  code                    String                   @unique
  name                    String
  description             String?
  categoryId              String
  type                    String                   @default("PRODUCT")
  unitOfMeasureId         String
  trackInventory          Boolean                  @default(true)
  minStockLevel           Float                    @default(0)
  maxStockLevel           Float                    @default(0)
  reorderPoint            Float                    @default(0)
  standardCost            Float                    @default(0)
  listPrice               Float                    @default(0)
  inventoryAccountId      String?
  cogsAccountId           String?
  salesAccountId          String?
  isActive                Boolean                  @default(true)
  isSaleable              Boolean                  @default(true)
  isPurchaseable          Boolean                  @default(true)
  createdBy               String
  createdAt               DateTime                 @default(now())
  updatedAt               DateTime                 @updatedAt
  goodsReceiptItems       GoodsReceiptItem[]       @relation("ReceiptItemProduct")
  inventoryBalances       InventoryBalance[]       @relation("ItemLocationBalances")
  invoiceItems            InvoiceItem[]            @relation("InvoiceItemProduct")
  category                Category                 @relation(fields: [categoryId], references: [id])
  unitOfMeasure           UnitOfMeasure            @relation(fields: [unitOfMeasureId], references: [id])
  inventoryAccount        Account?                 @relation("ItemInventoryAccount", fields: [inventoryAccountId], references: [id])
  cogsAccount             Account?                 @relation("ItemCogsAccount", fields: [cogsAccountId], references: [id])
  salesAccount            Account?                 @relation("ItemSalesAccount", fields: [salesAccountId], references: [id])
  physicalCountItems      PhysicalCountItem[]      @relation("ItemPhysicalCounts")
  purchaseOrderItems      PurchaseOrderItem[]      @relation("POItemProduct")
  quotationItems          QuotationItem[]          @relation("QuotationItemProduct")
  quotationTemplateItems  QuotationTemplateItem[]  @relation("TemplateItemProduct")
  salesOrderItems         SalesOrderItem[]         @relation("SalesOrderItemProduct")
  salesOrderTemplateItems SalesOrderTemplateItem[] @relation("SalesOrderTemplateItemProduct")
  shipmentItems           ShipmentItem[]           @relation("ShipmentItemProduct")
  stockLots               StockLot[]
  stockMovements          StockMovement[]
  stockReservations       StockReservation[]       @relation("ItemStockReservations")
  stockTransferItems      StockTransferItem[]      @relation("ItemStockTransfers")

  @@index([code])
  @@index([categoryId])
  @@index([type])
}

model StockLot {
  id                 String              @id @default(cuid())
  lotNumber          String              @unique
  itemId             String
  receivedDate       DateTime
  expiryDate         DateTime?
  supplierName       String?
  supplierId         String?
  purchaseRef        String?
  receivedQty        Float
  availableQty       Float
  reservedQty        Float               @default(0)
  unitCost           Float
  totalCost          Float
  isActive           Boolean             @default(true)
  createdBy          String
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  locationStockLots  LocationStockLot[]  @relation("LotLocationStock")
  physicalCountItems PhysicalCountItem[] @relation("LotPhysicalCounts")
  item               Item                @relation(fields: [itemId], references: [id])
  supplier           Supplier?           @relation("SupplierStockLots", fields: [supplierId], references: [id])
  stockMovements     StockMovement[]
  stockTransferItems StockTransferItem[] @relation("LotStockTransfers")

  @@index([itemId])
  @@index([receivedDate])
  @@index([availableQty])
}

model StockMovement {
  id              String        @id @default(cuid())
  movementNumber  String        @unique
  itemId          String
  stockLotId      String?
  movementType    String
  movementDate    DateTime
  quantity        Float
  unitCost        Float         @default(0)
  totalCost       Float         @default(0)
  unitOfMeasureId String
  referenceType   String?
  referenceId     String?
  referenceNumber String?
  locationId      String?
  locationName    String?
  journalEntryId  String?
  goodsReceiptId  String?
  notes           String?
  approvedBy      String?
  approvedAt      DateTime?
  createdBy       String
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  item            Item          @relation(fields: [itemId], references: [id])
  stockLot        StockLot?     @relation(fields: [stockLotId], references: [id])
  unitOfMeasure   UnitOfMeasure @relation(fields: [unitOfMeasureId], references: [id])
  location        Location?     @relation("LocationStockMovements", fields: [locationId], references: [id])
  journalEntry    JournalEntry? @relation(fields: [journalEntryId], references: [id])
  goodsReceipt    GoodsReceipt? @relation("ReceiptStockMovements", fields: [goodsReceiptId], references: [id])

  @@index([itemId])
  @@index([movementType])
  @@index([movementDate])
  @@index([referenceType, referenceId])
}

model StockReservation {
  id               String          @id @default(cuid())
  itemId           String
  salesOrderId     String
  salesOrderItemId String?
  quantityReserved Float
  status           String          @default("ACTIVE")
  reservedBy       String
  reservedAt       DateTime        @default(now())
  releasedBy       String?
  releasedAt       DateTime?
  expiresAt        DateTime?
  notes            String?
  item             Item            @relation("ItemStockReservations", fields: [itemId], references: [id])
  salesOrder       SalesOrder      @relation("OrderStockReservations", fields: [salesOrderId], references: [id])
  salesOrderItem   SalesOrderItem? @relation("OrderItemStockReservations", fields: [salesOrderItemId], references: [id])

  @@index([itemId])
  @@index([salesOrderId])
  @@index([status])
  @@index([reservedAt])
}

model ExchangeRate {
  id           String   @id @default(cuid())
  fromCurrency String
  toCurrency   String
  rate         Float
  rateDate     DateTime
  source       String   @default("manual")
  isActive     Boolean  @default(true)
  createdBy    String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([fromCurrency, toCurrency, rateDate])
  @@index([fromCurrency, toCurrency])
  @@index([rateDate])
  @@index([isActive])
}

model CustomerPO {
  id            String      @id @default(cuid())
  poNumber      String      @unique
  customerId    String
  quotationId   String?
  salesCaseId   String?
  poDate        DateTime
  poAmount      Float
  currency      String      @default("USD")
  exchangeRate  Float       @default(1.0)
  attachmentUrl String?
  isAccepted    Boolean     @default(false)
  acceptedAt    DateTime?
  acceptedBy    String?
  salesOrderId  String?     @unique
  notes         String?
  createdBy     String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  customer      Customer    @relation(fields: [customerId], references: [id])
  quotation     Quotation?  @relation(fields: [quotationId], references: [id])
  salesCase     SalesCase?  @relation(fields: [salesCaseId], references: [id])
  salesOrder    SalesOrder? @relation(fields: [salesOrderId], references: [id])

  @@index([customerId])
  @@index([quotationId])
  @@index([salesCaseId])
  @@index([poDate])
}

model CaseExpense {
  id              String        @id @default(cuid())
  salesCaseId     String
  expenseDate     DateTime
  category        String
  description     String
  amount          Float
  currency        String        @default("USD")
  exchangeRate    Float         @default(1.0)
  baseAmount      Float
  attachmentUrl   String?
  receiptNumber   String?
  vendor          String?
  status          String        @default("DRAFT")
  approvedBy      String?
  approvedAt      DateTime?
  rejectedBy      String?
  rejectedAt      DateTime?
  rejectionReason String?
  accountId       String?
  journalEntryId  String?
  createdBy       String
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  salesCase       SalesCase     @relation(fields: [salesCaseId], references: [id])
  account         Account?      @relation(fields: [accountId], references: [id])
  journalEntry    JournalEntry? @relation(fields: [journalEntryId], references: [id])

  @@index([salesCaseId])
  @@index([expenseDate])
  @@index([category])
  @@index([status])
}

model Supplier {
  id               String            @id @default(cuid())
  supplierNumber   String            @unique
  name             String
  email            String?           @unique
  phone            String?
  website          String?
  address          String?
  taxId            String?
  currency         String            @default("USD")
  paymentTerms     Int               @default(30)
  creditLimit      Float             @default(0)
  discount         Float             @default(0)
  bankName         String?
  bankAccount      String?
  routingNumber    String?
  contactPerson    String?
  contactEmail     String?
  contactPhone     String?
  accountId        String?           @unique
  isActive         Boolean           @default(true)
  isPreferred      Boolean           @default(false)
  createdBy        String
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  purchaseOrders   PurchaseOrder[]
  stockLots        StockLot[]        @relation("SupplierStockLots")
  account          Account?          @relation("SupplierAccount", fields: [accountId], references: [id])
  supplierInvoices SupplierInvoice[]
  supplierPayments SupplierPayment[]

  @@index([supplierNumber])
  @@index([name])
  @@index([isActive])
}

model PurchaseOrder {
  id               String              @id @default(cuid())
  poNumber         String              @unique
  supplierId       String
  status           String              @default("DRAFT")
  orderDate        DateTime            @default(now())
  expectedDate     DateTime?
  requestedBy      String?
  subtotal         Float               @default(0)
  taxAmount        Float               @default(0)
  discountAmount   Float               @default(0)
  shippingAmount   Float               @default(0)
  totalAmount      Float               @default(0)
  receivedAmount   Float               @default(0)
  invoicedAmount   Float               @default(0)
  paidAmount       Float               @default(0)
  paymentTerms     String?
  deliveryTerms    String?
  shippingAddress  String?
  billingAddress   String?
  notes            String?
  internalNotes    String?
  approvedBy       String?
  approvedAt       DateTime?
  sentToSupplier   Boolean             @default(false)
  sentAt           DateTime?
  currency         String              @default("USD")
  exchangeRate     Float               @default(1.0)
  createdBy        String
  createdAt        DateTime            @default(now())
  updatedAt        DateTime            @updatedAt
  receipts         GoodsReceipt[]
  supplier         Supplier            @relation(fields: [supplierId], references: [id])
  items            PurchaseOrderItem[]
  supplierInvoices SupplierInvoice[]

  @@index([supplierId])
  @@index([status])
  @@index([orderDate])
  @@index([poNumber])
}

model PurchaseOrderItem {
  id               String             @id @default(cuid())
  purchaseOrderId  String
  itemId           String?
  itemCode         String
  description      String
  quantity         Float              @default(1)
  unitPrice        Float              @default(0)
  discount         Float              @default(0)
  taxRate          Float              @default(0)
  taxRateId        String?
  unitOfMeasureId  String?
  subtotal         Float              @default(0)
  discountAmount   Float              @default(0)
  taxAmount        Float              @default(0)
  totalAmount      Float              @default(0)
  quantityReceived Float              @default(0)
  quantityInvoiced Float              @default(0)
  sortOrder        Int                @default(0)
  receiptItems     GoodsReceiptItem[]
  purchaseOrder    PurchaseOrder      @relation(fields: [purchaseOrderId], references: [id], onDelete: Cascade)
  item             Item?              @relation("POItemProduct", fields: [itemId], references: [id])
  taxRateConfig    TaxRate?           @relation("POItemTaxRate", fields: [taxRateId], references: [id])
  unitOfMeasure    UnitOfMeasure?     @relation("POItemUoM", fields: [unitOfMeasureId], references: [id])

  @@index([purchaseOrderId])
  @@index([itemId])
}

model GoodsReceipt {
  id              String             @id @default(cuid())
  receiptNumber   String             @unique
  purchaseOrderId String
  receiptDate     DateTime           @default(now())
  deliveryNote    String?
  receivedBy      String
  condition       String?
  notes           String?
  status          String             @default("PENDING")
  createdBy       String
  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @updatedAt
  purchaseOrder   PurchaseOrder      @relation(fields: [purchaseOrderId], references: [id])
  items           GoodsReceiptItem[]
  stockMovements  StockMovement[]    @relation("ReceiptStockMovements")

  @@index([purchaseOrderId])
  @@index([receiptDate])
  @@index([status])
}

model GoodsReceiptItem {
  id                  String            @id @default(cuid())
  goodsReceiptId      String
  purchaseOrderItemId String
  itemId              String
  itemCode            String
  description         String
  quantityOrdered     Float
  quantityReceived    Float
  unitCost            Float
  condition           String?
  notes               String?
  goodsReceipt        GoodsReceipt      @relation(fields: [goodsReceiptId], references: [id], onDelete: Cascade)
  purchaseOrderItem   PurchaseOrderItem @relation(fields: [purchaseOrderItemId], references: [id])
  item                Item              @relation("ReceiptItemProduct", fields: [itemId], references: [id])

  @@index([goodsReceiptId])
  @@index([purchaseOrderItemId])
  @@index([itemId])
}

model SupplierInvoice {
  id              String            @id @default(cuid())
  invoiceNumber   String            @unique
  supplierId      String
  purchaseOrderId String?
  invoiceDate     DateTime
  dueDate         DateTime
  paymentTerms    String?
  subtotal        Float             @default(0)
  taxAmount       Float             @default(0)
  discountAmount  Float             @default(0)
  totalAmount     Float             @default(0)
  paidAmount      Float             @default(0)
  status          String            @default("RECEIVED")
  matchingStatus  String?
  approvedBy      String?
  approvedAt      DateTime?
  currency        String            @default("USD")
  exchangeRate    Float             @default(1.0)
  journalEntryId  String?
  createdBy       String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  supplier        Supplier          @relation(fields: [supplierId], references: [id])
  purchaseOrder   PurchaseOrder?    @relation(fields: [purchaseOrderId], references: [id])
  journalEntry    JournalEntry?     @relation(fields: [journalEntryId], references: [id])
  payments        SupplierPayment[]

  @@index([supplierId])
  @@index([purchaseOrderId])
  @@index([status])
  @@index([invoiceDate])
  @@index([dueDate])
}

model SupplierPayment {
  id                String           @id @default(cuid())
  paymentNumber     String           @unique
  supplierId        String
  supplierInvoiceId String?
  paymentDate       DateTime         @default(now())
  paymentMethod     String
  amount            Float
  reference         String?
  notes             String?
  currency          String           @default("USD")
  exchangeRate      Float            @default(1.0)
  baseAmount        Float
  journalEntryId    String?
  createdBy         String
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  supplier          Supplier         @relation(fields: [supplierId], references: [id])
  supplierInvoice   SupplierInvoice? @relation(fields: [supplierInvoiceId], references: [id])
  journalEntry      JournalEntry?    @relation(fields: [journalEntryId], references: [id])

  @@index([supplierId])
  @@index([supplierInvoiceId])
  @@index([paymentDate])
  @@index([paymentMethod])
}

model TaxCategory {
  id          String    @id @default(cuid())
  code        String    @unique
  name        String
  description String?
  isActive    Boolean   @default(true)
  isDefault   Boolean   @default(false)
  createdBy   String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  taxRates    TaxRate[]

  @@index([code])
  @@index([isActive])
}

model TaxRate {
  id                      String                   @id @default(cuid())
  code                    String                   @unique
  name                    String
  description             String?
  rate                    Float
  categoryId              String
  taxType                 String                   @default("SALES")
  appliesTo               String                   @default("ALL")
  effectiveFrom           DateTime                 @default(now())
  effectiveTo             DateTime?
  isActive                Boolean                  @default(true)
  isDefault               Boolean                  @default(false)
  isCompound              Boolean                  @default(false)
  collectedAccountId      String?
  paidAccountId           String?
  createdBy               String
  createdAt               DateTime                 @default(now())
  updatedAt               DateTime                 @updatedAt
  invoiceItems            InvoiceItem[]            @relation("InvoiceItemTaxRate")
  purchaseOrderItems      PurchaseOrderItem[]      @relation("POItemTaxRate")
  quotationItems          QuotationItem[]          @relation("QuotationItemTaxRate")
  quotationTemplateItems  QuotationTemplateItem[]  @relation("TemplateItemTaxRate")
  salesOrderItems         SalesOrderItem[]         @relation("SalesOrderItemTaxRate")
  salesOrderTemplateItems SalesOrderTemplateItem[] @relation("SalesOrderTemplateItemTaxRate")
  taxExemptions           TaxExemption[]
  category                TaxCategory              @relation(fields: [categoryId], references: [id])
  collectedAccount        Account?                 @relation("TaxCollectedAccount", fields: [collectedAccountId], references: [id])
  paidAccount             Account?                 @relation("TaxPaidAccount", fields: [paidAccountId], references: [id])

  @@index([code])
  @@index([categoryId])
  @@index([taxType])
  @@index([isActive])
  @@index([effectiveFrom, effectiveTo])
}

model TaxExemption {
  id              String    @id @default(cuid())
  entityType      String
  entityId        String
  taxRateId       String?
  exemptionNumber String?
  reason          String?
  effectiveFrom   DateTime  @default(now())
  effectiveTo     DateTime?
  attachmentUrl   String?
  isActive        Boolean   @default(true)
  createdBy       String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  taxRate         TaxRate?  @relation(fields: [taxRateId], references: [id])

  @@index([entityType, entityId])
  @@index([taxRateId])
  @@index([isActive])
  @@index([effectiveFrom, effectiveTo])
}

model CompanySettings {
  id                          String   @id @default(cuid())
  companyName                 String   @default("EnXi ERP")
  address                     String?
  phone                       String?
  email                       String?
  website                     String?
  logoUrl                     String?
  defaultCurrency             String   @default("USD")
  defaultTaxRateId            String?
  taxRegistrationNumber       String?
  quotationTermsAndConditions String?
  quotationFooterNotes        String?
  quotationValidityDays       Int      @default(30)
  quotationPrefix             String   @default("QUOT")
  quotationNumberFormat       String   @default("PREFIX-YYYY-NNNN")
  orderPrefix                 String   @default("SO")
  orderNumberFormat           String   @default("PREFIX-YYYY-NNNN")
  defaultOrderPaymentTerms    String?
  defaultOrderShippingTerms   String?
  defaultShippingMethod       String?
  autoReserveInventory        Boolean  @default(true)
  requireCustomerPO           Boolean  @default(false)
  orderApprovalThreshold      Float?
  orderConfirmationTemplate   String?
  showCompanyLogoOnQuotations Boolean  @default(true)
  showCompanyLogoOnOrders     Boolean  @default(true)
  showTaxBreakdown            Boolean  @default(true)
  
  // Default GL Accounts for Items
  defaultInventoryAccountId   String?
  defaultCogsAccountId        String?
  defaultSalesAccountId       String?
  defaultInventoryAccount     Account? @relation("DefaultInventoryAccount", fields: [defaultInventoryAccountId], references: [id])
  defaultCogsAccount          Account? @relation("DefaultCogsAccount", fields: [defaultCogsAccountId], references: [id])
  defaultSalesAccount         Account? @relation("DefaultSalesAccount", fields: [defaultSalesAccountId], references: [id])
  
  // Default Inventory Settings
  defaultTrackInventory       Boolean  @default(true)
  
  isActive                    Boolean  @default(true)
  createdAt                   DateTime @default(now())
  updatedAt                   DateTime @updatedAt
  updatedBy                   String?

  @@index([isActive])
}

model Permission {
  id              String           @id @default(cuid())
  code            String           @unique
  name            String
  description     String?
  module          String
  action          String
  createdAt       DateTime         @default(now())
  rolePermissions RolePermission[]
  userPermissions UserPermission[]

  @@index([module])
  @@index([action])
}

model RolePermission {
  id           String     @id @default(cuid())
  role         String
  permissionId String
  createdAt    DateTime   @default(now())
  permission   Permission @relation(fields: [permissionId], references: [id])

  @@unique([role, permissionId])
  @@index([role])
}

model UserPermission {
  id           String     @id @default(cuid())
  userId       String
  permissionId String
  granted      Boolean    @default(true)
  expiresAt    DateTime?
  createdAt    DateTime   @default(now())
  user         User       @relation(fields: [userId], references: [id])
  permission   Permission @relation(fields: [permissionId], references: [id])

  @@unique([userId, permissionId])
  @@index([userId])
  @@index([expiresAt])
}

model UserProfile {
  id                  String    @id @default(cuid())
  userId              String    @unique
  firstName           String?
  lastName            String?
  phone               String?
  department          String?
  jobTitle            String?
  avatarUrl           String?
  timezone            String    @default("UTC")
  language            String    @default("en")
  lastLoginAt         DateTime?
  lastLoginIp         String?
  failedLoginAttempts Int       @default(0)
  lockedUntil         DateTime?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  user                User      @relation(fields: [userId], references: [id])

  @@index([userId])
}

model UserSession {
  id           String   @id @default(cuid())
  userId       String
  token        String   @unique
  ipAddress    String?
  userAgent    String?
  lastActivity DateTime @default(now())
  expiresAt    DateTime
  createdAt    DateTime @default(now())
  user         User     @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([token])
  @@index([expiresAt])
}

model SalesTeamMember {
  id                String   @id @default(cuid())
  userId            String   @unique
  salesTarget       Float    @default(0)
  commission        Float    @default(0)
  territory         String?
  specialization    String?
  currentMonthSales Float    @default(0)
  yearToDateSales   Float    @default(0)
  teamName          String?
  isTeamLead        Boolean  @default(false)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Location {
  id                 String             @id @default(cuid())
  locationCode       String             @unique
  name               String
  type               String             @default("WAREHOUSE")
  description        String?
  address            String?
  city               String?
  state              String?
  country            String             @default("US")
  postalCode         String?
  contactPerson      String?
  phone              String?
  email              String?
  isActive           Boolean            @default(true)
  isDefault          Boolean            @default(false)
  allowNegativeStock Boolean            @default(false)
  maxCapacity        Float?
  currentUtilization Float              @default(0)
  inventoryAccountId String?
  createdBy          String
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
  inventoryBalances  InventoryBalance[]
  inventoryAccount   Account?           @relation("LocationInventoryAccount", fields: [inventoryAccountId], references: [id])
  stockLots          LocationStockLot[]
  physicalCounts     PhysicalCount[]
  stockMovements     StockMovement[]    @relation("LocationStockMovements")
  stockTransfersFrom StockTransfer[]    @relation("TransferFromLocation")
  stockTransfersTo   StockTransfer[]    @relation("TransferToLocation")

  @@index([locationCode])
  @@index([type])
  @@index([isActive])
}

model InventoryBalance {
  id                String    @id @default(cuid())
  locationId        String
  itemId            String
  availableQuantity Float     @default(0)
  reservedQuantity  Float     @default(0)
  onOrderQuantity   Float     @default(0)
  totalQuantity     Float     @default(0)
  averageCost       Float     @default(0)
  totalValue        Float     @default(0)
  minStockLevel     Float?
  maxStockLevel     Float?
  reorderPoint      Float?
  lastMovementDate  DateTime?
  lastCountDate     DateTime?
  updatedAt         DateTime  @updatedAt
  location          Location  @relation(fields: [locationId], references: [id])
  item              Item      @relation("ItemLocationBalances", fields: [itemId], references: [id])

  @@unique([locationId, itemId])
  @@index([locationId])
  @@index([itemId])
  @@index([availableQuantity])
}

model LocationStockLot {
  id           String   @id @default(cuid())
  locationId   String
  stockLotId   String
  availableQty Float    @default(0)
  reservedQty  Float    @default(0)
  zone         String?
  aisle        String?
  shelf        String?
  bin          String?
  updatedAt    DateTime @updatedAt
  location     Location @relation(fields: [locationId], references: [id])
  stockLot     StockLot @relation("LotLocationStock", fields: [stockLotId], references: [id])

  @@unique([locationId, stockLotId])
  @@index([locationId])
  @@index([stockLotId])
  @@index([availableQty])
}

model StockTransfer {
  id             String              @id @default(cuid())
  transferNumber String              @unique
  fromLocationId String
  toLocationId   String
  transferDate   DateTime            @default(now())
  expectedDate   DateTime?
  status         String              @default("PENDING")
  reason         String?
  notes          String?
  attachmentUrl  String?
  requestedBy    String
  approvedBy     String?
  approvedAt     DateTime?
  shippedBy      String?
  shippedAt      DateTime?
  receivedBy     String?
  receivedAt     DateTime?
  totalQuantity  Float               @default(0)
  totalValue     Float               @default(0)
  createdBy      String
  createdAt      DateTime            @default(now())
  updatedAt      DateTime            @updatedAt
  fromLocation   Location            @relation("TransferFromLocation", fields: [fromLocationId], references: [id])
  toLocation     Location            @relation("TransferToLocation", fields: [toLocationId], references: [id])
  items          StockTransferItem[]

  @@index([fromLocationId])
  @@index([toLocationId])
  @@index([status])
  @@index([transferDate])
}

model StockTransferItem {
  id                String        @id @default(cuid())
  stockTransferId   String
  itemId            String
  stockLotId        String?
  requestedQuantity Float
  shippedQuantity   Float         @default(0)
  receivedQuantity  Float         @default(0)
  unitCost          Float         @default(0)
  totalCost         Float         @default(0)
  condition         String?
  notes             String?
  sortOrder         Int           @default(0)
  stockTransfer     StockTransfer @relation(fields: [stockTransferId], references: [id], onDelete: Cascade)
  item              Item          @relation("ItemStockTransfers", fields: [itemId], references: [id])
  stockLot          StockLot?     @relation("LotStockTransfers", fields: [stockLotId], references: [id])

  @@index([stockTransferId])
  @@index([itemId])
}

model PhysicalCount {
  id                 String              @id @default(cuid())
  countNumber        String              @unique
  locationId         String
  countDate          DateTime            @default(now())
  countType          String              @default("FULL")
  status             String              @default("PLANNED")
  categoryFilter     String?
  itemFilter         String?
  zoneFilter         String?
  countedBy          String
  reviewedBy         String?
  reviewedAt         DateTime?
  approvedBy         String?
  approvedAt         DateTime?
  itemsCounted       Int                 @default(0)
  adjustmentsFound   Int                 @default(0)
  totalVarianceValue Float               @default(0)
  notes              String?
  attachmentUrl      String?
  createdBy          String
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  location           Location            @relation(fields: [locationId], references: [id])
  items              PhysicalCountItem[]

  @@index([locationId])
  @@index([countDate])
  @@index([status])
}

model PhysicalCountItem {
  id                String        @id @default(cuid())
  physicalCountId   String
  itemId            String
  stockLotId        String?
  systemQuantity    Float
  countedQuantity   Float
  variance          Float         @default(0)
  variancePercent   Float         @default(0)
  unitCost          Float         @default(0)
  varianceValue     Float         @default(0)
  confidence        String?
  recountRequired   Boolean       @default(false)
  notes             String?
  adjustmentCreated Boolean       @default(false)
  adjustmentId      String?
  physicalCount     PhysicalCount @relation(fields: [physicalCountId], references: [id], onDelete: Cascade)
  item              Item          @relation("ItemPhysicalCounts", fields: [itemId], references: [id])
  stockLot          StockLot?     @relation("LotPhysicalCounts", fields: [stockLotId], references: [id])

  @@index([physicalCountId])
  @@index([itemId])
  @@index([variance])
}

model Sequence {
  name      String   @id
  value     Int      @default(0)
  updatedAt DateTime @updatedAt
}
